name: Build and Release

on:
  create:
    tags:
      - v*

jobs:
  build_matrix:
    name: Setup Node.js & Build
    strategy:
      matrix:
        os: [windows, macos, ubuntu]
        include:
          - os: windows
            build: npx caxa --input . --output build/ded_bot-win.exe -- "{{caxa}}/node_modules/.bin/node" "--experimental-json-modules" "{{caxa}}/bin/server.js"
          - os: macos
            build: npx caxa --input . --output build/ded_bot-macos -- "{{caxa}}/node_modules/.bin/node" "--experimental-json-modules" "{{caxa}}/bin/server.js"
          - os: ubuntu
            build: npx caxa --input . --output build/ded_bot-linux -- "{{caxa}}/node_modules/.bin/node" "--experimental-json-modules" "{{caxa}}/bin/server.js"
    runs-on: ${{ matrix.os }}-latest
    steps:
      - uses: actions/checkout@v2

      - name: Setup Node.js environment
        uses: actions/setup-node@v2
        with:
          node-version: 16

      - run: npm ci
      - run: ${{ matrix.build }}

      - name: Upload package artifact
        uses: actions/upload-artifact@v2
        with:
          name: package
          path: package.json

      - name: Upload build artifacts
        uses: actions/upload-artifact@v2
        with:
          name: build
          path: |
            ./build/*
            package.json
            README.md
            LICENSE.md

  create-win-archive:
    name: Create windows archive
    runs-on: ubuntu-latest
    needs: [build_matrix]

    steps:
      - name: Download package artifact
        uses: actions/download-artifact@v2
        with:
          name: package

      - name: Download executables
        uses: actions/download-artifact@v2
        with:
          name: build
  
      - name: Extract project version
        id: version
        uses: notiz-dev/github-action-json-property@release
        with: 
          path: 'package.json'
          prop_path: 'version'

      - name: Extract project name
        id: name
        uses: notiz-dev/github-action-json-property@release
        with: 
          path: 'package.json'
          prop_path: 'name'

      - name: Create archive
        uses: montudor/action-zip@v1
        with:
          args: zip -j ${{ steps.name.outputs.prop }}-win-${{ steps.version.outputs.prop }}.zip ./build/${{ steps.name.outputs.prop }}-win.exe LICENSE.md README.md

      - name: Upload archive
        uses: actions/upload-artifact@v2
        with:
          name: win-archive
          path: ${{ steps.name.outputs.prop }}-win-${{ steps.version.outputs.prop }}.zip

  create-linux-archive:
    name: Create linux archive
    runs-on: ubuntu-latest
    needs: [build_matrix]

    steps:
      - name: Download package artifact
        uses: actions/download-artifact@v2
        with:
          name: package

      - name: Download executables
        uses: actions/download-artifact@v2
        with:
          name: build
  
      - name: Extract project version
        id: version
        uses: notiz-dev/github-action-json-property@release
        with: 
          path: 'package.json'
          prop_path: 'version'

      - name: Extract project name
        id: name
        uses: notiz-dev/github-action-json-property@release
        with: 
          path: 'package.json'
          prop_path: 'name'

      - name: Create archive
        uses: montudor/action-zip@v1
        with:
          args: zip -j ${{ steps.name.outputs.prop }}-linux-${{ steps.version.outputs.prop }}.zip ./build/${{ steps.name.outputs.prop }}-linux LICENSE.md README.md

      - name: Upload archive
        uses: actions/upload-artifact@v2
        with:
          name: linux-archive
          path: ${{ steps.name.outputs.prop }}-linux-${{ steps.version.outputs.prop }}.zip

  create-macos-archive:
    name: Create macOS archive
    runs-on: ubuntu-latest
    needs: [build_matrix]

    steps:
      - name: Download package artifact
        uses: actions/download-artifact@v2
        with:
          name: package

      - name: Download executables
        uses: actions/download-artifact@v2
        with:
          name: build
  
      - name: Extract project version
        id: version
        uses: notiz-dev/github-action-json-property@release
        with: 
          path: 'package.json'
          prop_path: 'version'

      - name: Extract project name
        id: name
        uses: notiz-dev/github-action-json-property@release
        with: 
          path: 'package.json'
          prop_path: 'name'

      - name: Create archive
        uses: montudor/action-zip@v1
        with:
          args: zip -j ${{ steps.name.outputs.prop }}-macos-${{ steps.version.outputs.prop }}.zip ./build/${{ steps.name.outputs.prop }}-macos LICENSE.md README.md

      - name: Upload archive
        uses: actions/upload-artifact@v2
        with:
          name: macos-archive
          path: ${{ steps.name.outputs.prop }}-macos-${{ steps.version.outputs.prop }}.zip

  upload-pre-release:
    name: Upload Pre-release
    runs-on: ubuntu-latest
    needs: [create-linux-archive, create-win-archive, create-macos-archive]

    steps:
      - name: Download package artifact
        uses: actions/download-artifact@v2
        with:
          name: package

      - name: Extract project version
        id: version
        uses: notiz-dev/github-action-json-property@release
        with: 
          path: 'package.json'
          prop_path: 'version'

      - name: Extract project name
        id: name
        uses: notiz-dev/github-action-json-property@release
        with: 
          path: 'package.json'
          prop_path: 'name'

      - name: Get windows archive
        uses: actions/download-artifact@v2
        with:
          name: win-archive
          path: ./archives/

      - name: Get linux archive
        uses: actions/download-artifact@v2
        with:
          name: linux-archive
          path: ./archives/

      - name: Get macOS archive
        uses: actions/download-artifact@v2
        with:
          name: macos-archive
          path: ./archives/
        
      - name: Upload Release
        uses: marvinpinto/action-automatic-releases@v1.2.1
        with:
          repo_token: ${{ github.token }}
          automatic_release_tag: v${{ steps.version.outputs.prop }}
          prerelease: false
          title: ${{ steps.name.outputs.prop }} v${{ steps.version.outputs.prop }}
          files: ./archives/*
